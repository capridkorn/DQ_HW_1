import random  # импортирует модуль random
import string  # импортирует модуль string
"""
lst = [] # объявляем пустой список

# заполняем список случайным (от 2 до 10) количеством пустых словарей:
for i in range(random.randint(2, 10)):  # выбираем случайное чило от 2 до 10
    lst.append({})  # и такое количество раз добавляем в список пустой словарь

# заполняем словари в списке случайным количеством значений
for dct_n in range(len(lst)):  # берем каждый словарь списка
    for i in range(random.randint(2, 10)):  # выбираем случайным образом сколько значений ключей будет циклично записано
        kn = {random.choice(string.ascii_lowercase):random.randint(1,100)}  # создаем словарь с 1 случайной парой буква/число
        lst[dct_n].update(kn)  # добавляем пару в наш целевой словарь
print('Сгенерированный список словарей:', lst)"""

lst = [{'z': 73, 'n': 47}, {'e': 76, 'x': 45, 'd': 25, 'q': 80, 'c': 65, 'o': 64}, {'x': 61, 'g': 29, 'p': 66}]
print('Сгенерированный список словарей:', lst)

ks = []  # объявляем пустой список, куда запишем ключи со всех словарей
for i in range (len(lst)):  # проходим по словарям в списке
    ks = ks + list(lst[i].keys())  # в пустую переменную записываем ключи с каждого списка
    ks.sort()  # сортируем список
#print('Ключи со всех словарей:', ks)  # вывести список всех ключей для дебага

ks_n = []  # объявляем пустой список, куда запишем ключи со всех словарей без дубликатов
for i in range(len(ks)):  # проходим по списку клюсчей со всех словарей
    if i == len(ks)-1:  # условие на последний элемент списка
        ks_n += ks[i]  # записываем в переменную
    elif ks[i] == ks[i+1]:  # если элемент равен следующему
        continue  # ничего не делаем
    elif ks[i] != ks[i+1]: # если элемент не равен следующему
        ks_n += ks[i] # записываем в переменную
#print('Уникальные ключи:', ks_n)  # вывести список уникальных ключей для дебага


key_in_dicts = [] # объявляем пустой список, куда запишем значения по ключу
k_name = '' # объявляем переменную string в которую запишем скорректированное название ключа
st_lst = [] # объявляем пустой список, куда запишем пары ключ/макс значение
fnl_lst = [] # объявляем пустой список, куда запишем финальный результат
for i in range(len(ks_n)):  # проходим по каждому уникальному ключу
    for j in range(len(lst)):  # проходим по кааждому словарю для выбранного ключа
        key_in_dicts.append(lst[j].get(ks_n[i]))  # записываем значения по ключу в список
    #print(key_in_dicts)  # вывести значения по ключу для дебага
    key_in_dicts_wo_null = [] # объявляем пустой список, куда запишем значения по ключу без значения None
    for k in key_in_dicts:  # проходим списку значений по ключу
        if k != None:
            key_in_dicts_wo_null.append(k) # записываем только значения не равные None
    #print(key_in_dicts_wo_null)  # вывести значения по ключу без значения None для дебага
    if len(key_in_dicts_wo_null) > 1:  # если значений одного ключа больше чем одно - значит нужно менять название ключа
        k_name = ks_n[i]+'_'+str(key_in_dicts.index(max(key_in_dicts_wo_null)))  # формируем новое назваание ключа добавляя нижнее подчеркивание и порядковый номер словаря, где находится его макс значение
        st_lst.append(k_name)  # в переменную записываем сформированное имя
        st_lst.append(max(key_in_dicts_wo_null))  # в переменную записываем максимальное значение
        st_lst_t = tuple(st_lst)  # переводим в тип tuple чтобы потом сформировать dict
    elif len(key_in_dicts_wo_null) == 1:  # если значений одного ключа больше одно - значит менять название ключа не нужно
        st_lst.append(ks_n[i])  # в переменную записываем название ключа
        st_lst.append(max(key_in_dicts_wo_null))  # в переменную записываем значение
        st_lst_t = tuple(st_lst)  # переводим в тип tuple чтобы потом сформировать dict
    #print(st_lst_t)  # выводим новое имя ключа + значение для дебага
    key_in_dicts.clear()  # очищаем список перед след циклом
    fnl_lst.append(st_lst_t)  # добавляем значение в финальную переменную
    st_lst.clear() # очищаем список перед след циклом
fnl_lst = dict(fnl_lst)  # переводим в словарь
print ('Словарь сформированный по заданию:', fnl_lst)  #выводим сформированный словарь на экран УРА